#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const YAML = require('yamljs');

const program = require('commander');
const Client = require('node-rest-client').Client;
const config = require('../.caade/config');
/* Replace this with your own config file. */
const _ = require('lodash');
let client = new Client();
program.parse(process.argv);
var baseURL = program.args[0];

if (!baseURL) {
    baseURL = "http://" + config.caade.build.hostname;
}
console.log(baseURL);
let url = baseURL + "/ecosystem/init";
let params = ["mode=json"]; // Json results expected.
try {
    client.get(url, function (data, response) {
        data = JSON.parse(data.toString('utf8'));
        console.log("Data:", data);
        // parsed response body as js object
        if (data.error) {
            console.error("Error:" + data.error);
        }
        else {
            var dirname = ".caade";
            if (!fs.existsSync(dirname)) {
                fs.mkdirSync(dirname);
            }
            data.active = "local";
            data.url = baseURL;
            let jsstring = "module.exports = { caade: " + JSON.stringify(data) + "};";
            fs.writeFile(dirname + "/config.js", jsstring, function (err) {
                if (err) {
                    return console.log(err);
                }
                    console.log("Caade initialized");
            });
        }
    });
}
catch (e) {
    console.error(e);
}
